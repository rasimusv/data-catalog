version: '3.8'
services:
  postgres:
    build: ./pg_zombodb
    environment:
      - POSTGRES_USER=metadata
      - POSTGRES_PASSWORD=metadata
      - POSTGRES_DB=datacatalog
    volumes:
      - ./pg_zombodb/scripts:/docker-entrypoint-initdb.d
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "airflow" ]
      interval: 10s
      retries: 5
      start_period: 5s
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: always

  scheduler:
    image: apache/airflow
    command: scheduler
    restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - airflow/.env
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/cert:/tmp/cert


  webserver:
    image: apache/airflow
    entrypoint: /opt/airflow/scripts/airflow-entrypoint.sh
    restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy
      scheduler:
        condition: service_started
      flask:
        condition: service_started
    env_file:
      - airflow/.env
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/scripts/airflow-entrypoint.sh:/opt/airflow/scripts/airflow-entrypoint.sh
      - ./airflow/cert:/tmp/cert
    ports:
      - "8080:8080"

  flask:
    build: ./flask
    environment:
      - FLASK_ENV=development
      - PYTHONUNBUFFERED=True
    volumes:
      - ./flask:/web-server
    ports:
      - "3000:3000"
    command: gunicorn -b 0.0.0.0:3000 main:app
    depends_on:
      postgres:
        condition: service_healthy

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.10
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - "ES_JAVA_OPTS=-Xms1G -Xmx1G"
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: curl -s localhost:9200/_cat/health >/dev/null || exit 1
      interval: 10s
      timeout: 10s
      retries: 5
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      - ./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml

volumes:
  elasticsearch_data:
  pg_data: