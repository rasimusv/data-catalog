SELECT CONCAT(TABLE_SCHEMA, '.', TABLE_NAME, '.', COLUMN_NAME)                                      as entity_name,
       COLUMN_NAME                                                                                  as entity_name_short,
       CONCAT('mysql.', REPLACE((SELECT @@hostname), '.', '-'), '.', TABLE_SCHEMA, '.', TABLE_NAME, '.',
              COLUMN_NAME)                                                                          as urn,
       CONCAT('mysql.', REPLACE((SELECT @@hostname), '.', '-'), '.', TABLE_SCHEMA, '.', TABLE_NAME) as parent_urn,
       CONCAT(TABLE_SCHEMA, '.', TABLE_NAME)                                                        as parent_table_full_name,
       JSON_OBJECT('core_system', 'MySQL',
                   'table_schema', TABLE_SCHEMA,
                   'table_name', TABLE_NAME,
                   'column_name', COLUMN_NAME,
                   'ordinal_position', ORDINAL_POSITION,
                   'column_default', COLUMN_DEFAULT,
                   'not_null', NOT IS_NULLABLE,
                   'column_type', COLUMN_TYPE,
                   'column_key', IF(COLUMN_KEY = '', NULL, COLUMN_KEY),
                   'column_comment', IF(COLUMN_COMMENT = '', NULL, COLUMN_COMMENT))                 as json_data,
       JSON_OBJECT('CORE_SYSTEM', 'MySQL',
                   'COLUMN_DEFAULT', COLUMN_DEFAULT,
                   'NOT_NULL', NOT IS_NULLABLE,
                   'COLUMN_TYPE', COLUMN_TYPE)                                                      as json_data_ui,
       IF(COLUMN_COMMENT = '', NULL, JSON_OBJECT('notifications',
                                                 JSON_ARRAY(JSON_OBJECT('title', 'Column comment',
                                                                        'type', 'info',
                                                                        'body', COLUMN_COMMENT))))  as notifications
FROM information_schema.COLUMNS
WHERE TABLE_SCHEMA = '{{ params.schema }}';